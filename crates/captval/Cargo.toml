[package]
name = "captval"
version = "0.1.2"
description = "Captcha validators"
documentation = "https://docs.rs/captval"
repository = "https://github.com/jerus-org/captval"
authors = ["Jeremiah Russell <jrussell@jerus.ie>"]
license = "MIT OR Apache-2.0"
readme = "README.md"
categories = ["web-programming"]
keywords = [
    "hcaptcha",
    "recaptcha",
    "captcha",
    "security",
    "backend",
    "protection",
]
include = [
    "**/*.rs",
    "Cargo.toml",
    "README.md",
    "LICENSE-APACHE",
    "LICENSE-MIT",
    "CHANGES.md",
]

edition.workspace = true
rust-version.workspace = true
publish = true

[dependencies]
captval_derive = { version = "0.1.2", path = "../captval_derive" }
reqwest.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_urlencoded.workspace = true
thiserror.workspace = true
tracing = { workspace = true, optional = true }
url.workspace = true
uuid.workspace = true

[dev-dependencies]
chrono.workspace = true
claims.workspace = true
env_logger.workspace = true
hex.workspace = true
itertools.workspace = true
lambda_runtime.workspace = true
mockd = { workspace = true }
rand.workspace = true
serde_test.workspace = true
tokio.workspace = true
tracing-appender.workspace = true
tracing-bunyan-formatter.workspace = true
tracing-log.workspace = true
tracing-subscriber.workspace = true
tracing-test.workspace = true
trybuild.workspace = true
wiremock.workspace = true

[features]
default = ["hcaptcha", "rustls-backend"]
enterprise = []
hcaptcha = []
recaptcha = []
nativetls-backend = ["reqwest/native-tls"]
nightly = []
rustls-backend = ["reqwest/rustls-tls"]
trace = ["dep:tracing"]
