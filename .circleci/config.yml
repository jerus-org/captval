version: 2.1

parameters:
  min-rust-version:
    type: string
    default: "1.85"
  fingerprint:
    type: string
    default: SHA256:OkxsH8Z6Iim6WDJBaII9eTT9aaO1f3eDc6IpsgYYPVg
  validation-flag:
    type: boolean
    default: false
    description: "If true, the validation pipeline will be executed."
  success-flag:
    type: boolean
    default: false
    description: "If true, the success pipeline will be executed."
  release-flag:
    type: boolean
    default: false
    description: "If true, the release pipeline will be executed."

orbs:
  toolkit: jerus-org/circleci-toolkit@2.13.0
  # sonarcloud: sonarsource/sonarcloud@2.0.0

executors:
  rust-env:
    docker:
      - image: jerusdp/ci-rust:<<pipeline.parameters.min-rust-version>>
  base-env:
    docker:
      - image: jerusdp/ci-rust:base

jobs:
  test-features:
    parameters:
      features:
        type: string
    executor: rust-env
    steps:
      - checkout
      - run: cargo +stable --version
      - run:
          name: Running test with features-H<<parameters.features>>H
          command: "cargo +stable test --no-default-features <<parameters.features>>"

workflows:
  check_last_commit:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>
        - not: << pipeline.parameters.release-flag >>

    jobs:
      - toolkit/choose_pipeline:
          name: choose pipeline based on committer
          context: bot-check

  validation:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.release-flag >>
        - << pipeline.parameters.validation-flag >>
    jobs:
      - toolkit/label:
          min_rust_version: << pipeline.parameters.min-rust-version >>
          context: pcu-app
          filters:
            branches:
              only:
                - main
      - toolkit/code_coverage:
          min_rust_version: << pipeline.parameters.min-rust-version >>
          filters:
            branches:
              ignore:
                - main
      - toolkit/required_builds:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/optional_builds:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/common_tests:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/idiomatic_rust:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/security:
          context: SonarCloud

      - test-features:
          matrix:
            parameters:
              features:
                [
                  "-F hcaptcha,ext,rustls-backend",
                  "-F hcaptcha,ext,rustls-backend,enterprise",
                  "",
                  "-F hcaptcha,rustls-backend",
                  "-F hcaptcha,ext,rustls-backend,trace,enterprise",
                ]
          requires:
            - toolkit/common_tests
            - toolkit/required_builds

      - toolkit/test_wasm:
          min_rust_version: << pipeline.parameters.min-rust-version >>
          wasm_test_path: "crates/test-wasm"
          requires:
            - toolkit/common_tests
            - toolkit/required_builds

      - toolkit/update_prlog:
          requires:
            - toolkit/idiomatic_rust
            - toolkit/code_coverage
            - toolkit/security
            - toolkit/test_wasm
            - test-features
          context:
            - release
            - bot-check
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          min_rust_version: << pipeline.parameters.min-rust-version >>

  on_success:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>
        - not: << pipeline.parameters.release-flag >>

    jobs:
      - toolkit/end_success

  release:
    when:
      and:
        - or:
            - and:
                - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
                - equal: ["release check", << pipeline.schedule.name >>]
            - <<  pipeline.parameters.release-flag >>
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>
    jobs:
      - toolkit/make_release:
          context:
            - release
            - bot-check
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          min_rust_version: << pipeline.parameters.min-rust-version >>
          echo: true
